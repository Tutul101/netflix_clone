{"version":3,"sources":["axios.js","request.js","components/Banner.js","components/Navbar.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","api_key","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","str","n","movie_image","backdrop_path","className","style","backgroundSize","backgroundImage","backgroundPosition","title","name","original_name","overview","substr","Navbar","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","poster_path","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2364c7aa.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n","const api_key = \"41aa71c266583144a231e9043b32f427\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${api_key}&language=en-us`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${api_key}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${api_key}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${api_key}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${api_key}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${api_key}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${api_key}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${api_key}&with_genres=99`,\r\n};\r\nexport default requests;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport requests from \"../request\";\r\nimport \"./Banner.css\";\r\nexport const Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n  var movie_image = `url(${base_url}${movie?.backdrop_path})`;\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: movie_image,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h6 className=\"banner__description\">{truncate(movie?.overview)}</h6>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nexport const Navbar = () => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://assets.brand.microsites.netflix.io/assets/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png?v=35\"\r\n        alt=\"Netflix Logo\"\r\n      ></img>\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://media.customon.com/unsafe/600x600/img.customon.com//art/2/600/600/0a0909/86739/3d4e4cd2d303960f1f6337bb587c2723.png.jpg\"\r\n        alt=\"Netflix Avatar\"\r\n      ></img>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nexport const Row = ({ title, fetchUrl, isLargeRow }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      //   console.log(request);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  //   console.table(movies);\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || movie?.name || movie?.original_name)\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          console.log(url);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"movie__posters\">\r\n        {movies.map((movie) => {\r\n          return (\r\n            <img\r\n              key={movie.id}\r\n              className={`movie__poster ${isLargeRow && \"row_posterLarge\"}`}\r\n              src={`${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n              onClick={() => handleClick(movie)}\r\n            ></img>\r\n          );\r\n        })}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}></YouTube>}\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { Banner } from \"./components/Banner\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Row } from \"./components/Row\";\nimport requests from \"./request\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Banner></Banner>\n      <Row\n        title=\"Netflix Originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      ></Row>\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}></Row>\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}></Row>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}></Row>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}></Row>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}></Row>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}></Row>\n      <Row title=\"Documnetaries\" fetchUrl={requests.fetchDocumentaries}></Row>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}